/* biome-ignore-all lint/suspicious/noTemplateCurlyInString: intended */
export const clientScript = Buffer.from("/** biome-ignore-all lint/complexity/useOptionalChain: compatibility */\n(() => {\n\t/**\n\t * @param {Object} event\n\t * @param {string} event.data relative file path\n\t */\n\tconst onChange = (event) => {\n\t\tconst changedFileUrl = new URL(`/${event.data}`, location.href);\n\t\tif (changedFileUrl.pathname.endsWith(\".css\")) {\n\t\t\tfor (const link of document.querySelectorAll('link[rel=\"stylesheet\"]')) {\n\t\t\t\tif (link.href) {\n\t\t\t\t\tconst cssUrl = new URL(link.href, location.href);\n\t\t\t\t\tif (changedFileUrl.pathname === cssUrl.pathname) {\n\t\t\t\t\t\tcssUrl.searchParams.set(\"reload\", Date.now());\n\t\t\t\t\t\tlink.href = cssUrl.href;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlocation.reload();\n\t};\n\t/** @param {Object} event */\n\tconst onError = (event) => console.error(event);\n\tconst scriptElement = document.querySelector(\"#middleware-static-livereload\");\n\tconst src = scriptElement && scriptElement.getAttribute(\"src\");\n\tconst endpoint = src && `${src}/connect`;\n\tif (!endpoint) {\n\t\tthrow new Error(\"Failed to get the livereload endpoint\");\n\t}\n\tconst eventSource = new EventSource(endpoint);\n\teventSource.addEventListener(\"error\", onError);\n\teventSource.addEventListener(\"change\", onChange);\n\tglobalThis.liveReload = {endpoint, scriptElement, eventSource};\n})();\n");
