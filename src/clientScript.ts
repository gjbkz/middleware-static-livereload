export const clientScript = Buffer.from("/** biome-ignore-all lint/style/useTemplate: compatibility */\n/** biome-ignore-all lint/complexity/useOptionalChain: compatibility */\n(() => {\n\t/**\n\t * removes parameters from given URL.\n\t * @param {string} inputPathWithParameters\n\t */\n\tfunction removeParameters(inputPathWithParameters) {\n\t\treturn inputPathWithParameters.replace(/^([^?#]*).*?$/, \"$1\");\n\t}\n\t/**\n\t * returns true if the input is an absolute path.\n\t * @param {string} inputPath\n\t */\n\tfunction isAbsolute(inputPath) {\n\t\treturn inputPath[0] === \"/\";\n\t}\n\t/**\n\t * returns \"foo/bar\" if the input is \"foo/bar/baz\"\n\t * @param {string} input\n\t */\n\tfunction dirname(input) {\n\t\treturn input.replace(/^(.*)\\/.*?$/, \"$1\");\n\t}\n\t/**\n\t * returns \".html\" if the input is \"foo/bar/baz.html\"\n\t * @param {string} input\n\t */\n\tfunction extname(input) {\n\t\treturn input.replace(/^.*\\./, \".\");\n\t}\n\t/**\n\t * convert relative pathname to absolute one\n\t * @param {string} inputPathname\n\t */\n\tfunction absolutify(inputPathname) {\n\t\tconst pathname = removeParameters(inputPathname);\n\t\tif (isAbsolute(pathname)) {\n\t\t\treturn pathname;\n\t\t}\n\t\treturn dirname(location.pathname) + \"/\" + pathname;\n\t}\n\t/**\n\t * handles \"change\" events\n\t * @param {Object} event\n\t * @param {string} event.data relative file path\n\t */\n\tfunction onChange(event) {\n\t\tconst pathname = event.data;\n\t\tif (extname(pathname) === \".css\") {\n\t\t\tconst selector = 'link[rel=\"stylesheet\"][href*=\"' + pathname + '\"]';\n\t\t\tconst element = document.querySelector(selector);\n\t\t\tif (element) {\n\t\t\t\tconst absolutePath = absolutify(element.getAttribute(\"href\"));\n\t\t\t\telement.setAttribute(\"href\", absolutePath + \"?reload=\" + Date.now());\n\t\t\t}\n\t\t} else {\n\t\t\tlocation.reload();\n\t\t}\n\t}\n\t/**\n\t * handles \"error\" events\n\t * @param {Object} event\n\t */\n\tfunction onError(event) {\n\t\tconsole.error(event);\n\t}\n\tconst scriptElement = document.querySelector(\"#middleware-static-livereload\");\n\tconst src = scriptElement && scriptElement.getAttribute(\"src\");\n\tconst endpoint = src && src + \"/connect\";\n\tif (!endpoint) {\n\t\tthrow new Error(\"Failed to get the livereload endpoint\");\n\t}\n\tconst eventSource = new EventSource(endpoint);\n\teventSource.addEventListener(\"error\", onError);\n\teventSource.addEventListener(\"add\", onChange);\n\teventSource.addEventListener(\"change\", onChange);\n\teventSource.addEventListener(\"unlink\", onChange);\n})();\n");